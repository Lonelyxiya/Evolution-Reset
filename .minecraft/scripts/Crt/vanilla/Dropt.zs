import mods.dropt.Dropt;
import mods.dropt.Harvester;
import crafttweaker.item.IItemStack;
//2021.06.27
//Origin_s
      .matchBlocks(["twilightforest:twilight_log:*", "minecraft:log2:*", "minecraft:log:*", "traverse:fir_log"])

Dropt.list("list_gravel")
.priority(1)
	.add(Dropt.rule()
     .matchDrops([<ore:gravel>])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
        .addDrop(Dropt.drop()
		    .selector(Dropt.weight(25))
            .items([<pyrotech:rock>], Dropt.range(3))
	    )
        .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:2>], Dropt.range(3))
        )
		.addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:3>], Dropt.range(3))
        )
		.addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:8>], Dropt.range(3))
        )
	)
    .add(Dropt.rule()
       .matchDrops([<ore:gravel>])
        .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "shovel;1;-1")
        )
        .addDrop(Dropt.drop())
        )
    .add(Dropt.rule()
       .matchDrops([<ore:gravel>])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;1;3")
        )
        .addDrop(Dropt.drop()
		    .selector(Dropt.weight(25))
            .items([<pyrotech:rock>], Dropt.range(3))
	    )
        .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:2>], Dropt.range(3))
        )
		.addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:3>], Dropt.range(3))
        )
		.addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:8>], Dropt.range(3))
        )
    )
	
	.add(Dropt.rule()
       .matchDrops([<ore:gravel>])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;4;10")
        ) 
        .addDrop(Dropt.drop()
		   .selector(Dropt.weight(20))
		   .items([<minecraft:flint>], Dropt.range(1))  
		)
		.addDrop(Dropt.drop()
           .selector(Dropt.weight(80))
           .items([<minecraft:gravel>], Dropt.range(1))
      )
		
	);

Dropt.list("list_dirt")
.priority(1)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:dirt:*", "minecraft:grass_path", "minecraft:mycelium"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock:4>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:4>], Dropt.range(4))  
	  )
	)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:dirt:*", "minecraft:grass_path", "minecraft:mycelium"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "shovel;0;-1")
      )
      .addDrop(Dropt.drop())
	)
   .add(Dropt.rule()
       .matchBlocks(["minecraft:dirt:*", "minecraft:grass_path", "minecraft:mycelium"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;0;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		      .items([<pyrotech:rock:4>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:4>], Dropt.range(4))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:dirt:*", "minecraft:grass_path", "minecraft:mycelium"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock:4>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<minecraft:dirt>], Dropt.range(1))
      )
		
	);

Dropt.list("list_sand")
.priority(1)
	.add(Dropt.rule()
	  .matchDrops([<minecraft:sand>])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:5>], Dropt.range(3))
      )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:5>], Dropt.range(4))
      )
	)
	.add(Dropt.rule()
	  .matchDrops([<minecraft:sand:1>])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:9>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:9>], Dropt.range(4))
       )
	)
    .add(Dropt.rule()
     .matchDrops([<ore:sand>])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "shovel;0;-1")
      )
      .addDrop(Dropt.drop())
	)	
    .add(Dropt.rule()
	   .matchDrops([<minecraft:sand>])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;0;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:5>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:5>], Dropt.range(4))
       )
    )
	   .add(Dropt.rule()
	   .matchDrops([<minecraft:sand:1>])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;0;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:9>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:9>], Dropt.range(4))
       )
    )
   .add(Dropt.rule()
	   .matchDrops([<minecraft:sand:1>])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock:9>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<minecraft:sand:1>], Dropt.range(1))
        )
    )		
   .add(Dropt.rule()
	   .matchDrops([<minecraft:sand>])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;4;10")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(15))
		    .items([<pyrotech:rock:5>], Dropt.range(4))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<minecraft:sand>], Dropt.range(1))
       )
    );

Dropt.list("list_grass")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:grass", "minecraft:grass_path:1"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock:4>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:4>], Dropt.range(4))  
	  )
	)
    .add(Dropt.rule()
        .matchBlocks(["minecraft:grass", "minecraft:grass_path:1"])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("BLACKLIST", [], "shovel;0;-1")
        ) 
        .addDrop(Dropt.drop())
	)
   .add(Dropt.rule()
        .matchBlocks(["minecraft:grass"])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;0;3")
        )
        .addDrop(Dropt.drop()
	        .force()
            .items([<pyrotech:rock:4>], Dropt.range(3))
	    )
		.addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:4>])
        )
        .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:strange_tuber>])
      )
    )
    .add(Dropt.rule()
        .matchBlocks(["minecraft:grass"])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;4;10")
        ) 
        .addDrop(Dropt.drop()
		   .selector(Dropt.weight(25))
		   .items([<pyrotech:rock_grass>], Dropt.range(4))  
		)
		.addDrop(Dropt.drop()
           .selector(Dropt.weight(75))
           .items([<pyrotech:rock_grass>], Dropt.range(3))
      )	
	);

Dropt.list("list_andesite")
.priority(1)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:stone:5", "pyrotech:cobblestone", "minecraft:stone:6"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock:3>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:3>], Dropt.range(4))  
	  )
	)
      .add(Dropt.rule()
      .matchBlocks(["minecraft:stone:5", "pyrotech:cobblestone", "minecraft:stone:6"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "pickaxe;1;-1")
       )
       .addDrop(Dropt.drop())
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone:5", "pyrotech:cobblestone", "minecraft:stone:6"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;1;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:3>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:3>], Dropt.range(4))
       )
    );

Dropt.list("list_andesite_high")
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone:5", "pyrotech:cobblestone", "minecraft:stone:6"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock:3>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<pyrotech:cobblestone>], Dropt.range(1))
        )	  
    );


Dropt.list("list_clay")
.priority(1)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:clay"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:material:17>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:material:17>], Dropt.range(4))  
	  )
	)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:clay"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "shovel;0;-1")
       )
       .addDrop(Dropt.drop())
    )
    .add(Dropt.rule()
       .matchBlocks(["minecraft:clay"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;0;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:material:17>], Dropt.range(4))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:material:17>], Dropt.range(5))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:clay"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:material:17>], Dropt.range(5))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<minecraft:clay_ball>], Dropt.range(2))
        )	  
    );


Dropt.list("list_stone")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:stone", "minecraft:monster_egg:*", "minecraft:cobblestone", "traverse:blue_rock", "traverse:red_rock"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:stone", "minecraft:monster_egg:*", "minecraft:cobblestone", "traverse:blue_rock", "traverse:red_rock"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "pickaxe;1;-1")
       )
       .addDrop(Dropt.drop())
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone", "minecraft:monster_egg:*", "minecraft:cobblestone", "traverse:blue_rock", "traverse:red_rock"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;1;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock>], Dropt.range(4))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone", "minecraft:monster_egg:*", "minecraft:cobblestone", "traverse:blue_rock", "traverse:red_rock"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<minecraft:cobblestone>], Dropt.range(1))
        )  
    );


Dropt.list("list_granite")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:stone:1", "minecraft:stone:2", "pyrotech:cobblestone:2"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock:1>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:1>], Dropt.range(4))  
	  )
	)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:stone:1", "minecraft:stone:2", "pyrotech:cobblestone:2"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "pickaxe;1;-1")
       )
       .addDrop(Dropt.drop())
    )	
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone:1", "minecraft:stone:2", "pyrotech:cobblestone:2"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;1;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:1>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:1>], Dropt.range(4))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone:1", "minecraft:stone:2", "pyrotech:cobblestone:2"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock:1>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<pyrotech:cobblestone:2>], Dropt.range(1))
        )	  
    );
	

Dropt.list("list_diorite")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:stone:3", "minecraft:stone:4", "pyrotech:cobblestone:1"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock:2>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:2>], Dropt.range(4))  
	  )
	)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:stone:3", "minecraft:stone:4", "pyrotech:cobblestone:1"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "pickaxe;1;-1")
       )
       .addDrop(Dropt.drop())
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone:3", "minecraft:stone:4", "pyrotech:cobblestone:1"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;1;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:2>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:2>], Dropt.range(4))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:stone:3", "minecraft:stone:4", "pyrotech:cobblestone:1"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock:2>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<pyrotech:cobblestone:1>], Dropt.range(1))
        )	  
    );


Dropt.list("list_ore_coal")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:coal_ore", "galaxyspace:marsores:2", "galaxyspace:enceladusblocks:2", "galaxyspace:titanblocks:6", "galaxyspace:proxima_b_blocks:8", "galaxyspace:barnarda_c_ores"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
   .add(Dropt.rule()
       .matchBlocks(["minecraft:coal_ore", "galaxyspace:marsores:2", "galaxyspace:enceladusblocks:2", "galaxyspace:titanblocks:6", "galaxyspace:proxima_b_blocks:8", "galaxyspace:barnarda_c_ores"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;0;3")
       )
	   .addDrop(Dropt.drop()
	        .force()
		    .items([<pyrotech:rock>], Dropt.range(2))
	   )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(90))
		    .items([<pyrotech:material:21>], Dropt.range(4))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(10))
            .items([<minecraft:coal>], Dropt.range(1))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:coal_ore", "galaxyspace:marsores:2", "galaxyspace:enceladusblocks:2", "galaxyspace:titanblocks:6", "galaxyspace:proxima_b_blocks:8", "galaxyspace:barnarda_c_ores"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        ) 
	   .addDrop(Dropt.drop()
	        .force()
		    .items([<pyrotech:rock>], Dropt.range(2))
	    )
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(80))
            .items([<minecraft:coal>], Dropt.range(2))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(20))
            .items([<pyrotech:material:21>], Dropt.range(4))
        )
    )
   .add(Dropt.rule()
       .matchBlocks(["minecraft:coal_ore", "galaxyspace:marsores:2"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;10;-1")
        ) 
	   .addDrop(Dropt.drop()
	        .force()
		    .items([<pyrotech:rock>], Dropt.range(2))
	    )
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(90))
            .items([<minecraft:coal>], Dropt.range(6))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(10))
            .items([<pyrotech:material:21>], Dropt.range(4))
        )
    );
	
Dropt.list("list_ore_fossil")
.priority(1)
	
   .add(Dropt.rule()
       .matchBlocks(["pyrotech:fossil_ore"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;0;3")
       )
	   .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	   )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(90))
		    .items([<pyrotech:material:11>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(10))
            .items([<minecraft:bone>], Dropt.range(2))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["pyrotech:fossil_ore"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        )
	   .addDrop(Dropt.drop()
	        .force()
		    .items([
			<pyrotech:rock>,
			<pyrotech:material:11>
			], Dropt.range(2))
	    )
       .addDrop(Dropt.drop()
	        .selector(Dropt.weight(20))
            .items([<pyrotech:material:11>], Dropt.range(3))
		)
	   .addDrop(Dropt.drop()
	   	    .selector(Dropt.weight(80))
            .items([<minecraft:dye:20>], Dropt.range(2))
        )
    );

Dropt.list("list_wool")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["minecraft:wool:*"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<minecraft:string>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<minecraft:string>], Dropt.range(4))  
	  )
	)
	
   .add(Dropt.rule()
      .matchBlocks(["minecraft:wool:*"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "shears;0;-1")
      )
      .addDrop(Dropt.drop())
	)
   .add(Dropt.rule()
       .matchBlocks(["minecraft:wool:*"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shears;1;-1")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<minecraft:string>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<minecraft:string>], Dropt.range(4))
       )
    );

Dropt.list("list_orecopper")

  	.add(Dropt.rule()
      .matchBlocks(["galacticraftcore:basic_block_core:5", "galacticraftcore:basic_block_moon", "galacticraftplanets:mars", "galacticraftplanets:venus:7", "immersiveengineering:ore", "mekanism:oreblock:1"])
  	   .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	   )
	   .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	   )
	)
   .add(Dropt.rule()
        .matchBlocks(["galacticraftcore:basic_block_core:5", "galacticraftcore:basic_block_moon", "galacticraftplanets:mars", "galacticraftplanets:venus:7", "immersiveengineering:ore", "mekanism:oreblock:1"])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;0;1")
        ) 
        .addDrop(Dropt.drop())
	)
   .add(Dropt.rule()
      .matchBlocks(["galacticraftcore:basic_block_core:5", "galacticraftcore:basic_block_moon", "galacticraftplanets:mars", "galacticraftplanets:venus:7", "immersiveengineering:ore", "mekanism:oreblock:1"])
      .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;2;-1")
        )
      .addDrop(Dropt.drop()
	     .force()
		  .items([<pyrotech:rock>], Dropt.range(2))
	   )
	   .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_copper>], Dropt.range(3))
	   )
	   .addDrop(Dropt.drop()
        .selector(Dropt.weight(25))
		  .items([<pyrotech:generated_slag_copper>], Dropt.range(4))  
	   )
   );
	

Dropt.list("list_oreiron")

	.add(Dropt.rule()
      .matchBlocks(["galaxyspace:mirandablocks:3", "galaxyspace:barnarda_c_ores:1", "galaxyspace:mercuryblocks:4", "galacticraftplanets:asteroids_block:5", "galacticraftplanets:mars:3", "minecraft:iron_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
   .add(Dropt.rule()
        .matchBlocks(["galaxyspace:mirandablocks:3", "galaxyspace:barnarda_c_ores:1", "galaxyspace:mercuryblocks:4", "galacticraftplanets:asteroids_block:5", "galacticraftplanets:mars:3", "minecraft:iron_ore"])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;0;1")
        ) 
        .addDrop(Dropt.drop())
	)
    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:mirandablocks:3", "galaxyspace:barnarda_c_ores:1", "galaxyspace:mercuryblocks:4", "galacticraftplanets:asteroids_block:5", "galacticraftplanets:mars:3", "minecraft:iron_ore"])
	   .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;2;-1")
        ) 
     .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_iron>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_iron>], Dropt.range(4))  
	  )
    );
  
  

Dropt.list("list_oretin")

    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:proxima_b_blocks:6", "galaxyspace:barnarda_c_ores:8", "mekanism:oreblock:2", "galacticraftplanets:venus:11", "galacticraftplanets:mars:1", "galacticraftcore:basic_block_moon:1", "galacticraftcore:basic_block_core:6"])
  	   .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
   
    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:proxima_b_blocks:6", "galaxyspace:barnarda_c_ores:8", "mekanism:oreblock:2", "galacticraftplanets:venus:11", "galacticraftplanets:mars:1", "galacticraftcore:basic_block_moon:1", "galacticraftcore:basic_block_core:6"])
      .addDrop(Dropt.drop()
	     .force()
		  .items([<pyrotech:rock>], Dropt.range(2))
	   )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_tin>], Dropt.range(3))
	   )
	  .addDrop(Dropt.drop()
        .selector(Dropt.weight(25))
		  .items([<pyrotech:generated_slag_tin>], Dropt.range(4))  
	   ) 
   );
	
Dropt.list("list_oregold")

    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:marsores:1", "galaxyspace:proxima_b_blocks:5", "galaxyspace:barnarda_c_ores:2", "mekanism:oreblock:2", "galacticraftplanets:venus:11", "galacticraftplanets:mars:1", "galacticraftcore:basic_block_moon:1", "galacticraftcore:basic_block_core:6"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:marsores:1", "galaxyspace:proxima_b_blocks:5", "galaxyspace:barnarda_c_ores:2", "mekanism:oreblock:2", "galacticraftplanets:venus:11", "galacticraftplanets:mars:1", "galacticraftcore:basic_block_moon:1", "galacticraftcore:basic_block_core:6"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_gold>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_gold>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_orealuminum")

    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:1", "galaxyspace:marsores:5", "galaxyspace:haumeablocks:3", "galaxyspace:europablocks:5", "galaxyspace:barnarda_c_ores:9", "galacticraftplanets:venus:6", "galacticraftplanets:asteroids_block:3", "galacticraftcore:basic_block_core:7"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:marsores:5", "galaxyspace:haumeablocks:3", "galaxyspace:europablocks:5", "galaxyspace:barnarda_c_ores:9", "galacticraftplanets:venus:6", "galacticraftplanets:asteroids_block:3", "galacticraftcore:basic_block_core:7"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_aluminum>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_aluminum>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_oreosmium")

    .add(Dropt.rule()
      .matchBlocks(["mekanism:oreblock"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["mekanism:oreblock"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_osmium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_osmium>], Dropt.range(4))  
	  )
    );
	

Dropt.list("list_oresilver")

    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:3"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:3"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_silver>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_silver>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_oreuranium")

    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:5", "galaxyspace:gsores:2"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)

    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:5", "galaxyspace:gsores:2"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_uranium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_uranium>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_orelead")

    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:2"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:2"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_lead>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_lead>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_oreardite")

    .add(Dropt.rule()
      .matchBlocks(["tconstruct:ore:1"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["tconstruct:ore:1"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_ardite>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_ardite>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_orecobalt")

    .add(Dropt.rule()
      .matchBlocks(["tconstruct:ore", "galaxyspace:gsores", "galaxyspace:mirandablocks:7", "galaxyspace:barnarda_c_ores:11"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["tconstruct:ore", "galaxyspace:gsores", "galaxyspace:mirandablocks:7", "galaxyspace:barnarda_c_ores:11"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_cobalt>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_cobalt>], Dropt.range(4))  
	  ) 
    );
	

//Origin_s
//2021.8.10

Dropt.list("list_tnt")
.priority(1)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:tnt"])
	  .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "shovel;0;-1")
      )
      .addDrop(Dropt.drop())
	  )
	  
    .add(Dropt.rule()
      .matchBlocks(["minecraft:tnt"])
	  .matchHarvester(Dropt.harvester()
      .type("PLAYER")
      .mainHand("WHITELIST", [], "shovel;10;-1")
      )
      .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock:5>], Dropt.range(4))
      )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<minecraft:gunpowder>], Dropt.range(1))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<minecraft:gunpowder>], Dropt.range(2))  
	  )
	);

Dropt.list("list_limestone")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["pyrotech:limestone"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock:8>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:8>], Dropt.range(4))  
	  )
	)
	.add(Dropt.rule()
      .matchBlocks(["pyrotech:limestone"])
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "pickaxe;1;-1")
       )
       .addDrop(Dropt.drop())
    )
   .add(Dropt.rule()
       .matchBlocks(["pyrotech:limestone"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;1;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<pyrotech:rock:8>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<pyrotech:rock:8>], Dropt.range(4))
       )
    )
   .add(Dropt.rule()
       .matchBlocks(["pyrotech:limestone"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "pickaxe;4;10")
        ) 
       .addDrop(Dropt.drop()
		    .selector(Dropt.weight(15))
            .items([<pyrotech:rock:8>], Dropt.range(4))
		)
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(85))
            .items([<pyrotech:cobblestone:3>], Dropt.range(1))
        )	  
    );
	
Dropt.list("list_skull")
.priority(1)  
	.add(Dropt.rule()
      .matchBlocks(["pyrotech:fossil_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
    .add(Dropt.rule()
      .matchBlocks(["minecraft:skull:*"])
      .addDrop(Dropt.drop()
	     .force()
		 .items([<minecraft:dye:15>], Dropt.range(2))
      )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<minecraft:bone>], Dropt.range(1))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<minecraft:dye:15>], Dropt.range(1))  
	  )
	);

Dropt.list("list_orediamond")

    .add(Dropt.rule()
      .matchBlocks(["minecraft:diamond_ore", "galaxyspace:titanblocks:5", "galaxyspace:mirandablocks:5", "galaxyspace:proxima_b_blocks:10", "galaxyspace:barnarda_c_ores:5"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["minecraft:diamond_ore", "galaxyspace:titanblocks:5", "galaxyspace:mirandablocks:5", "galaxyspace:proxima_b_blocks:10", "galaxyspace:barnarda_c_ores:5"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<minecraft:diamond>], Dropt.range(1))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  ) 
    );
	

	
//2021.8.14

Dropt.list("list_flower")

    .add(Dropt.rule()
        .matchBlocks(["botania:specialflower:*"])
        .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("BLACKLIST", [], "shears;0;-1")
        ) 
        .addDrop(Dropt.drop())
	);

//2021.8.15
Dropt.list("list_oretungsten")

    .add(Dropt.rule()
      .matchBlocks(["contenttweaker:tungsten_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["contenttweaker:tungsten_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_tungsten>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_tungsten>], Dropt.range(4))  
	  ) 
    );
	

//2021.8.17

Dropt.list("list_oredilithium")

    .add(Dropt.rule()
	  
      .matchBlocks(["taiga:dilithium_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:dilithium_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_dilithium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_dilithium>], Dropt.range(4))  
	  ) 
    );
	
Dropt.list("list_oreabyssum")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:abyssum_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:abyssum_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_abyssum>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_abyssum>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_oreeezo")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:eezo_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:eezo_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_eezo>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_eezo>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_oreosram")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:osram_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)

    .add(Dropt.rule()
      .matchBlocks(["taiga:osram_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_osram>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_osram>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_orepalladium")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:palladium_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:palladium_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_palladium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_palladium>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_oreprometheum")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:prometheum_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:prometheum_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_prometheum>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_prometheum>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_orevalyrium")

    .add(Dropt.rule()
	  
      .matchBlocks(["taiga:valyrium_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:valyrium_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_valyrium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_valyrium>], Dropt.range(4))  
	  ) 
    );
	
Dropt.list("list_oreuru")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:uru_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:uru_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_uru>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_uru>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_oretiberium")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:uru_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:tiberium_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_tiberium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_tiberium>], Dropt.range(4))  
	  ) 
    );
	

Dropt.list("list_orevibranium")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:vibranium_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:vibranium_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_vibranium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_vibranium>], Dropt.range(4))  
	  ) 
    );


//2021.8.23

Dropt.list("list_orenickel")

    .add(Dropt.rule()
	  	
      .matchBlocks(["immersiveengineering:ore:4", "galaxyspace:gsores:1", "galaxyspace:mercuryblocks:3", "galaxyspace:mirandablocks:8", "galaxyspace:barnarda_c_ores:12"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["immersiveengineering:ore:4", "galaxyspace:gsores:1", "galaxyspace:mercuryblocks:3", "galaxyspace:mirandablocks:8", "galaxyspace:barnarda_c_ores:12"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_nickel>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_nickel>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_oremagnesium")

    .add(Dropt.rule()
	  	
      .matchBlocks(["galaxyspace:mercuryblocks:5", "galaxyspace:ganymedeblocks:2"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:mercuryblocks:5", "galaxyspace:ganymedeblocks:2"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_magnesium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_magnesium>], Dropt.range(4))  
	  ) 
    );
	
Dropt.list("list_oresilicon")

    .add(Dropt.rule()
	  	
      .matchBlocks(["galaxyspace:marsores:4", "galacticraftcore:basic_block_core:8", "galacticraftplanets:venus:10", "galaxyspace:europablocks:4", "galaxyspace:proxima_b_blocks:9", "galaxyspace:barnarda_c_ores:6"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["galaxyspace:marsores:4", "galacticraftcore:basic_block_core:8", "galacticraftplanets:venus:10", "galaxyspace:europablocks:4", "galaxyspace:proxima_b_blocks:9", "galaxyspace:barnarda_c_ores:6"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<galacticraftcore:basic_item:2>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<galacticraftcore:basic_item:2>], Dropt.range(4))  
	  ) 
    );

Dropt.list("list_planks")

    .add(Dropt.rule()
	  	
      .matchBlocks(["traverse:fir_planks", "immersiveengineering:treated_wood", "minecraft:planks:*", "twilightforest:twilight_oak_planks", "twilightforest:canopy_planks", "twilightforest:mangrove_planks", "twilightforest:dark_planks", "twilightforest:time_planks", "twilightforest:trans_planks", "twilightforest:mine_planks", "twilightforest:sort_planks"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<minecraft:stick>], Dropt.range(2))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:7>], Dropt.range(3))  
	  )
	)
	
    .add(Dropt.rule()
     .matchBlocks(["traverse:fir_planks", "immersiveengineering:treated_wood", "minecraft:planks:*", "twilightforest:twilight_oak_planks", "twilightforest:canopy_planks", "twilightforest:mangrove_planks", "twilightforest:dark_planks", "twilightforest:time_planks", "twilightforest:trans_planks", "twilightforest:mine_planks", "twilightforest:sort_planks"])
 	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<minecraft:stick>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock:7>], Dropt.range(3))  
	  ) 
    );


Dropt.list("list_meteorite")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:meteoritecobble_block", "taiga:meteorite_block", "galaxyspace:ceresblocks:3"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:meteoritecobble_block", "taiga:meteorite_block", "galaxyspace:ceresblocks:3"])
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_meteorite>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_meteorite>], Dropt.range(4))  
	  ) 
    );


Dropt.list("list_obsidiorite")

    .add(Dropt.rule()
	  	
      .matchBlocks(["taiga:obsidioritecobble_block", "taiga:obsidiorite_block"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["taiga:obsidioritecobble_block", "taiga:obsidiorite_block"])
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_obsidiorit>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_obsidiorit>], Dropt.range(4))  
	  ) 
    );
	
Dropt.list("list_soil")
.priority(1)
	.add(Dropt.rule()
      .matchBlocks(["tconstruct:soil"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<contenttweaker:cement_powder>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<contenttweaker:cement_powder>], Dropt.range(4))  
	  )
	)
	
   .add(Dropt.rule()
       .matchBlocks(["tconstruct:soil"])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "shovel;0;3")
       )
	   .addDrop(Dropt.drop()
            .selector(Dropt.weight(75))
		    .items([<contenttweaker:cement_powder>], Dropt.range(3))
       )
       .addDrop(Dropt.drop()
            .selector(Dropt.weight(25))
            .items([<contenttweaker:cement_powder>], Dropt.range(4))
       )
    );

Dropt.list("list_slakedlime")

    .add(Dropt.rule()
      .matchBlocks(["contenttweaker:slakedlime_block"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:material:8>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:material:8>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["contenttweaker:slakedlime_block"])
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:material:8>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:material:8>], Dropt.range(4))  
	  ) 
    );

//2022.1.22
Dropt.list("list_orechromium")

    .add(Dropt.rule()
      .matchBlocks(["contenttweaker:chromium_ore"])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:rock>], Dropt.range(3))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:rock>], Dropt.range(4))  
	  )
	)
	
    .add(Dropt.rule()
      .matchBlocks(["contenttweaker:chromium_ore"])
	  .addDrop(Dropt.drop()
	     .force()
		 .items([<pyrotech:rock>], Dropt.range(2))
	  )
	  .addDrop(Dropt.drop()
	     .selector(Dropt.weight(75))
	     .items([<pyrotech:generated_slag_chromium>], Dropt.range(3))
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(25))
		 .items([<pyrotech:generated_slag_chromium>], Dropt.range(4))  
	  ) 
    );

//2022.2.8
Dropt.list("list_chest")
.priority(1)
    .add(Dropt.rule()
     .matchDrops([<ore:chest>])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(80))
	     .items([<pyrotech:rock:7>], Dropt.range(5))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(20))
		 .items([<pyrotech:rock:7>], Dropt.range(6))  
	  )
	)
    .add(Dropt.rule()
     .matchDrops([<ore:chest>])
     .matchHarvester(Dropt.harvester()
     .gameStages("BLACKLIST", "ANY", ["chest"])
       )
       .addDrop(Dropt.drop())
    );

//2022.4.24
Dropt.list("list_torch")

    .add(Dropt.rule()
        .matchDrops([<ore:torch>])
        .addDrop(Dropt.drop()
		  .items([<minecraft:stick>])
	  )
	);

Dropt.list("list_bed")
.priority(1)
    .add(Dropt.rule()
     .matchDrops([<ore:bed>])
  	  .matchHarvester(Dropt.harvester()
         .type("EXPLOSION")
      )
      .addDrop(Dropt.drop()
	     .selector(Dropt.weight(80))
	     .items([<pyrotech:rock:7>], Dropt.range(7))  
	  )
	  .addDrop(Dropt.drop()
         .selector(Dropt.weight(20))
		 .items([<pyrotech:rock:7>], Dropt.range(8))  
	  )
	)
    .add(Dropt.rule()
     .matchDrops([<ore:bed>])
     .matchHarvester(Dropt.harvester()
     .gameStages("BLACKLIST", "ANY", ["bed"])
       )
       .addDrop(Dropt.drop())
    );
    
//2022.5.22

Dropt.list("list_leaves")

  .add(Dropt.rule()
      .matchBlocks(["minecraft:leaves:*"])
      .addDrop(Dropt.drop()
          .items([<minecraft:stick>])
      )
  );

var rocks = [

<pyrotech:rock>,
<pyrotech:rock:1>,
<pyrotech:rock:2>,
<pyrotech:rock:3>,
<pyrotech:rock:6>,
<pyrotech:rock:8>

] as IItemStack[];

val rockblocks = [

"pyrotech:rock", 
"pyrotech:rock:1", 
"pyrotech:rock:2", 
"pyrotech:rock:3", 
"pyrotech:rock:6", 
"pyrotech:rock:8"

] as string[];

for i, rockblock in rockblocks
    {

var rock = rocks[i];

Dropt.list("list_rocks")

  .add(Dropt.rule()
      .matchBlocks([rockblock])
      .addDrop(Dropt.drop()
          .items([rock])
      )
  );
  
    }
    

var logs = [

<twilightforest:twilight_log>,
<twilightforest:twilight_log:1>,
<twilightforest:twilight_log:2>,
<twilightforest:twilight_log:3>,
<twilightforest:magic_log>,
<twilightforest:magic_log:1>,
<twilightforest:magic_log:2>,
<twilightforest:magic_log:3>,
<minecraft:log>,
<minecraft:log:1>,
<minecraft:log:2>,
<minecraft:log:3>,
<minecraft:log2>,
<minecraft:log2:1>

] as IItemStack[];

val woods = [

"twilightforest:twilight_log", 
"twilightforest:twilight_log:1", 
"twilightforest:twilight_log:2", 
"twilightforest:twilight_log:3", 
"twilightforest:magic_log", 
"twilightforest:magic_log:1",
"twilightforest:magic_log:2",
"twilightforest:magic_log:3",
"minecraft:log",
"minecraft:log:1",
"minecraft:log:2",
"minecraft:log:3",
"minecraft:log2",
"minecraft:log2:1"

] as string[];

for i, wood in woods
    {

var log = logs[i];

Dropt.list("list_logs")

  .add(Dropt.rule()
      .matchBlocks([wood])
        .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("BLACKLIST", [], "axe;0;-1")
      )
      .addDrop(Dropt.drop())
	)
   .add(Dropt.rule()
      .matchBlocks([wood])
       .matchHarvester(Dropt.harvester()
            .type("PLAYER")
            .mainHand("WHITELIST", [], "axe;0;-1")
       )
	  .addDrop(Dropt.drop()
          .items([rock])
      )
    );
  
    }